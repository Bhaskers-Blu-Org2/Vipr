<Playlist Version="1.0"><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_custom_reader_and_writer_are_not_specified_then_defaults_are_used" /><Add Test="ViprCliUnitTests.Given_a_TypeResolver.When_the_assembly_has_multiple_types_that_implement_the_interface_it_throws_an_InvalidOperationException" /><Add Test="ViprCliUnitTests.Given_a_FileWriter.When_outputDirectoryPath_is_specified_and_exitst_then_it_writes_the_files_to_the_outputDirectoryPath" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_edmx_is_in_cloud_it_is_given_to_the_reader_and_the_writers_output_is_written_to_disk" /><Add Test="ViprCliUnitTests.Given_a_FileWriter.When_the_executing_assembly_is_executed_from_a_different_directory_files_are_written_to_that_directory" /><Add Test="ViprCliUnitTests.Given_a_ConfigurationProvider.It_loads_configuration_from_the_dotConfig_directory" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_custom_outputPath_with_two_levels_is_specified_then_it_is_used" /><Add Test="ViprCliUnitTests.Given_a_MetadataResolver.When_the_path_is_local_it_gets_metadata_from_the_filesystem" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_custom_outputPath_is_not_specified_then_defaults_are_used" /><Add Test="ViprCliUnitTests.Given_a_TypeResolver.When_the_assembly_cannot_be_found_it_throws_a_FileNotFoundException" /><Add Test="ViprCliUnitTests.Given_a_TypeResolver.When_the_requested_type_is_not_an_interface_it_throws_an_IllegalOperationException" /><Add Test="ViprCliUnitTests.Given_a_TypeResolver.When_the_assembly_has_a_single_type_that_implements_the_interface_it_returns_an_instance_of_that_type" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_edmx_is_on_filesystem_it_is_given_to_the_reader_and_the_writers_output_is_written_to_disk" /><Add Test="ViprCliUnitTests.Given_a_MetadataResolver.When_the_path_is_a_Uri_it_requests_metadata_from_the_cloud" /><Add Test="ViprCliUnitTests.Given_a_FileWriter.When_no_files_are_specified_it_returns" /><Add Test="ViprCliUnitTests.Given_a_FileWriter.When_outputDirectoryPath_is_specified_and_does_not_exitst_then_it_creates_the_directory_and_writes_the_files" /><Add Test="ViprCliUnitTests.Given_a_ConfigurationProvider.When_executed_from_a_different_directory_It_loads_configuration_from_the_dotConfig_directory" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_empty_string_outputPath_is_specified_then_working_directory_is_used" /><Add Test="ViprCliUnitTests.Given_a_TypeResolver.When_the_assembly_does_not_have_a_type_that_implements_the_interface_it_throws_an_IllegalOperationException" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_custom_outputPath_is_specified_then_it_is_used" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_a_custom_writer_is_specified_then_it_is_used" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_a_custom_reader_is_specified_then_it_is_used" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_modelexport_is_set_it_exports_the_model" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_a_reader_implements_IConfigurable_then_SetConfigurationProvider_is_called" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_two_level_outputPath_is_specified_then_it_is_used" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_a_writer_implements_IConfigurable_then_SetConfigurationProvider_is_called" /><Add Test="ViprCliUnitTests.Given_a_FileWriter.When_outputDirectoryPath_is_not_specified_then_it_writes_the_files_to_the_working_directory" /><Add Test="ViprCliUnitTests.Given_a_Bootstrapper.When_empty_string_outputPath_is_specified_then_current_working_dir_is_used" /><Add Test="ViprCliUnitTests.Given_a_FileWriter.When_outputDirectoryPath_is_specified_and_does_not_exist_then_it_creates_the_directory_and_writes_the_files" /></Playlist>