<#@ output extension=".cs" #>

<#@ CleanupBehavior processor="T4VSHost" CleanupAfterProcessingtemplate="true" #>

<#@ assembly name="System.Net" #>
<#@ assembly name="System.Net.Http" #>
<#@ assembly name="$(SolutionDir)test\Shared\ODataV4TestClientBuildDependencies\bin\Debug\Microsoft.Owin.Hosting.dll" #>
<#@ assembly name="$(SolutionDir)test\Shared\ODataV4TestClientBuildDependencies\bin\Debug\ODataV4TestService.dll" #>
<#@ assembly name="$(SolutionDir)test\Shared\ODataV4TestClientBuildDependencies\bin\Debug\System.Web.Http.dll" #>

<#@ import namespace="System.Reflection"#>

<#
    ResolveEventHandler handler = null;

    handler = (sender, args) => {
        // Use latest strong name & version when trying to load SDK assemblies
        var requestedAssembly = new AssemblyName(args.Name);

		Debug.WriteLine("attempting to redirect " + args.Name);

        switch (requestedAssembly.Name)
        {
			case "Microsoft.OData.Edm":
			case "Microsoft.Spatial":
			case "Microsoft.OData.Core":
				requestedAssembly.Version = new Version("6.7.0.0");
				break;
			case "Microsoft.Owin":
				requestedAssembly.Version = new Version("3.0.0.0");
				break;
            default:
				Debug.WriteLine("Could not redirect " + args.Name);
				break;
        }

        return Assembly.Load(requestedAssembly);
    };
    AppDomain.CurrentDomain.AssemblyResolve += handler;

    const string baseAddress = "http://localhost:9000/";

    using(Microsoft.Owin.Hosting.WebApp.Start<ODataV4TestService.SelfHost.Startup>(baseAddress))
    {
 #>

<#@ Include   file="..\..\..\src\ClientLibraries\T4Templates\ODatav4.tt" #>

<#    
    }
#>